parameters:
  - name: containerRegistryServiceConnection
    default: 'votingapp'
  - name: imageRepository
    default: 'crvoteapptestuks'
  - name: containerRegistry
    default: 'crvoteapptestuks.azurecr.io'
  - name: k8sNamespace
    default: 'votingapp'
  - name: imagePullSecret
    default: 'crvoteapptestuks-auth'
  - name: kubernetesServiceConnection
    default: 'az-k8s' 
  - name: tag
    default: '$(Build.BuildId)'  

jobs:
  # - deployment: DeployToAKS
  #   displayName: Deploy to AKS cluster
  #   pool:
  #     name: 'Default'  
  #     demands:
  #       - agent.name -equals BuildAgent
  #   environment: 'Approval-Deploy'
  #   strategy:
  #     runOnce:
  #       deploy:
  #         steps:
  #           - task: KubernetesManifest@0
  #             displayName: Create imagePullSecret in AKS
  #             inputs:
  #               action: createSecret
  #               secretName: $(imagePullSecret)
  #               dockerRegistryEndpoint: $(containerRegistryServiceConnection)

  #           - bash: |
  #               # Update the image reference in the manifest dynamically for AKS
  #               imageName="${{ parameters.containerRegistry }}/$(imageRepository):$(tag)"
  #               sed -ie "s|image: mcr.microsoft.com/azuredocs/azure-vote-front:v1|image: $imageName|g" azure-vote-all-in-one-redis.yaml
  #             displayName: Update image reference in manifest for AKS

  #           - task: KubernetesManifest@0
  #             displayName: Deploy to AKS
  #             inputs:
  #               action: deploy
  #               kubernetesServiceConnection: $(kubernetesServiceConnection)  # Use the correct service connection for AKS
  #               manifests: |
  #                 $(Pipeline.Workspace)/azure-vote-all-in-one-redis.yaml
  #               imagePullSecrets: |
  #                 $(imagePullSecret)

  - deployment: DeployToProxmox
    displayName: Deploy to Proxmox Kubernetes cluster
    pool:
      name: 'Default'
      demands:
        - agent.name -equals BuildAgent
    environment: 'Approval-Deploy'
    strategy:
      runOnce:
        deploy:
          steps:
            # Step to update the image reference in the manifest for Proxmox
            - bash: |
                # Dynamically update the image reference in the manifest
                imageName="${{ parameters.containerRegistry }}/$(imageRepository):$(tag)"
                sed -ie "s|image: mcr.microsoft.com/azuredocs/azure-vote-front:v1|image: $imageName|g" azure-vote-all-in-one-redis.yaml
              displayName: Update image reference in manifest for Proxmox

            # Step to deploy to Proxmox Kubernetes cluster
            - task: KubernetesManifest@0
              displayName: Deploy to Proxmox Kubernetes cluster
              inputs:
                action: deploy
                kubernetesServiceConnection: 'az-k8s'
                manifests: |
                  $(Pipeline.Workspace)/azure-vote-all-in-one-redis.yaml
                imagePullSecrets: |
                  $(imagePullSecret)  # Use the existing image pull secret for Proxmox
