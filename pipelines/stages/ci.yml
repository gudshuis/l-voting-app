parameters:
  - name: containerRegistryServiceConnection
    default: 'votingapp'
  - name: imageRepository
    default: 'crvoteapptestuks'
  - name: containerRegistry
    default: 'crvoteapptestuks.azurecr.io'
  - name: dockerfilePath
    default: '/azure-vote/Dockerfile'
  - name: tag
    default: '$(Build.BuildId)'

jobs:
  - job: Build
    displayName: Build and push docker image
    pool:
      name: 'Default'
      demands:
        - agent.name -equals BuildAgent
    steps:
      - task: Docker@2
        displayName: Login to ACR
        inputs:
          command: login
          containerRegistry: ${{ parameters.containerRegistryServiceConnection }}
      - task: Docker@2
        displayName: Build and push an image to ACR
        inputs:
          command: buildAndPush
          repository: ${{ parameters.imageRepository }}
          dockerfile: ${{ parameters.dockerfilePath }}
          containerRegistry: ${{ parameters.containerRegistryServiceConnection }}
          tags: ${{ parameters.tag }}

  - job: GenerateCIVersion
    displayName: Generate CI Version
    dependsOn: Build  # Ensures that this job runs after the Build job
    steps:
      - bash: |
          buildRef="voteapp_$(Build.BuildId)_$(date +'%d%m%y%T')"
          buildRef=${buildRef//:/_}
          echo $buildRef
          echo "##vso[task.setvariable variable=buildName;isOutput=true]$buildRef"
        name: buildName

  - job: PublishBuildArtifacts
    displayName: Publish Build Artifacts
    dependsOn: GenerateCIVersion  # Ensures that this job runs after the GenerateCIVersion job
    variables:
      varFromGenerateCIVersion: $[ dependencies.GenerateCIVersion.outputs['buildName.buildName'] ]
    steps:
      - bash: |
          imageName="${{ parameters.containerRegistry }}\/${{ parameters.imageRepository }}:${{ parameters.tag }}"
          sed -ie "s/image: mcr.microsoft.com\/azuredocs\/azure-vote-front:v1/image: $imageName/g" azure-vote-all-in-one-redis.yaml
        name: replaceImagetag
      - bash: |
          echo 'new file name is $(varFromGenerateCIVersion)'
          cp -v azure-vote-all-in-one-redis.yaml '$(Build.ArtifactStagingDirectory)/$(varFromGenerateCIVersion).yaml'
        name: renameManifest
      - task: PublishBuildArtifacts@1
        displayName: Publish Artifacts
        inputs:
          PathtoPublish: '$(Build.ArtifactStagingDirectory)'
          ArtifactName: 'votingappManifest'
          publishLocation: 'Container'
